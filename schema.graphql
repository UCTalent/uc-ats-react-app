"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

type BusinessQuery {
  """Get all business jobs"""
  jobs(status: String, page: Int, perPage: Int): JobPagination!
}

type City {
  capital: String
  capitalOf: Country
  country: Country
  id: ID!
  latitude: String
  longitude: String
  nameAscii: String!
  nameLocal: String!
}

type Country {
  capitalCity: City
  cities: [City!]
  codeIso2: String
  codeIso3: String
  globalRegion: Region
  id: ID!
  name: String
  subRegion: Region
}

type Industry {
  domain: String
  id: ID!
  industry: String
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Job {
  about: String
  appliedNum: Int
  benefits: String
  city: City
  country: Country
  createdAt: ISO8601DateTime!
  droppedNum: Int
  experienceLevel: String
  globalRegion: Region
  hiredNum: Int
  id: ID!
  jobApplies: [JobApply!]
  jobType: String
  location: String
  locationType: String
  locationValue: String
  managementLevel: String
  minimumQualifications: String!
  organization: Organization
  preferredRequirement: String!
  region: Region
  responsibilities: String!
  salary: JSON
  skills: [Skill!]
  speciality: Speciality
  status: String
  talents: [Talent!]
  title: String!
  updatedAt: ISO8601DateTime!
  viewedNum: Int
}

type JobApply {
  createdAt: ISO8601DateTime!
  email: String
  headline: String
  id: ID!
  jobId: ID!
  organization: Organization
  phoneNumber: String
  status: String
  talent: Talent
  updatedAt: ISO8601DateTime!
  uploadedResume: UploadedResume
}

type JobPagination {
  currentPage: Int!
  firstPage: Boolean!
  jobs: [Job!]!
  lastPage: Boolean!
  perPage: Int!
  totalPages: Int!
}

"""Represents untyped JSON"""
scalar JSON

type Organization {
  about: String
  address: String
  contactEmail: String
  contactPhone: String
  country: Country
  foundDate: String
  id: ID!
  industry: Industry
  logoUrl: String
  name: String
  orgType: String
  size: String
  status: String
  website: String
}

type Query {
  """Business related queries"""
  business: BusinessQuery!

  """Get a job detail"""
  job(id: String): Job!

  """Get all jobs"""
  jobs(creatorId: ID, status: String, page: Int, perPage: Int): JobPagination!

  """Get all organizations"""
  organizations(page: Int, perPage: Int): [Organization!]!

  """Get all talents"""
  talents(page: Int, perPage: Int): [Talent!]!

  """Get all users"""
  users(page: Int, perPage: Int): [User!]!
}

type Region {
  countries: [Country!]
  globalRegion: Region
  id: ID!
  name: String!
  regionType: String!
}

type Role {
  id: ID!
  name: String
}

type Skill {
  createdAt: ISO8601DateTime!
  id: ID!
  mainRole: String
  name: String
  role: Role
  roleId: ID!
  skillType: String
  updatedAt: ISO8601DateTime!
}

type Speciality {
  id: ID!
  role: Role
  speciality: String
}

type Talent {
  about: String
  createdAt: ISO8601DateTime!
  employmentStatus: String
  englishProficiency: String
  experienceLevel: Int
  headline: String
  id: ID!
  managementLevel: Int
  skills: [Skill!]
  status: String
  step: Int
  updatedAt: ISO8601DateTime!
  user: User
}

type UploadedResume {
  createdAt: ISO8601DateTime!
  id: ID!
  resumeUrl: String
  status: String
  talent: Talent
  updatedAt: ISO8601DateTime!
}

type User {
  avatar: String
  createdAt: ISO8601DateTime!
  email: String!
  id: String!
  name: String
  phoneNumber: String
  phoneNumberCountry: String
  refCode: String
  updatedAt: ISO8601DateTime!
}

